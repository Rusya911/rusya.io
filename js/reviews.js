// üîß –ó–ê–ú–ï–ù–ò –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ Supabase
const SUPABASE_URL = 'https://jfjaescqnacycsrfrbwj.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmamFlc2NxbmFjeWNzcmZyYndqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg1MDkzNjQsImV4cCI6MjA2NDA4NTM2NH0.AhTOw9yjZxACvxMr3XdW2sC-Ek5AbijSkrLy-NKEOwE';
const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_KEY);

// –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
async function testConnection() {
  try {
    const { data, error } = await supabase
      .from('reviews')
      .select('*')
      .limit(1);
    
    if (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
      return false;
    }
    
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', data);
    return true;
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', err);
    return false;
  }
}

// üß† –ü—Ä–æ—Å—Ç–∞—è –∫–∞–ø—á–∞: —Å—É–º–º–∞ –¥–≤—É—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
let captchaAnswer = 0;
function generateCaptcha() {
  const a = Math.floor(Math.random() * 10) + 1;
  const b = Math.floor(Math.random() * 10) + 1;
  captchaAnswer = a + b;
  document.getElementById('captchaQuestion').textContent = `–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç ${a} + ${b}?`;
}

// üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞
document.getElementById('reviewForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const name = document.getElementById('name').value.trim();
  const rating = document.querySelector('input[name="rating"]:checked')?.value;
  const review = document.getElementById('review').value.trim();
  const captcha = parseInt(document.getElementById('captcha').value, 10);

  if (captcha !== captchaAnswer) {
    alert('–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–ø—á—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    generateCaptcha();
    return;
  }

  if (!name || !rating || !review) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
    return;
  }

  try {
    const { data, error } = await supabase
      .from('reviews')
      .insert([{ 
        name, 
        rating: parseInt(rating, 10), 
        review 
      }])
      .select();

    if (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞: ' + error.message);
    } else {
      console.log('–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:', data);
      alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!');
      document.getElementById('reviewForm').reset();
      generateCaptcha();
      loadReviews();
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', err);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞');
  }
});

// üìã –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
async function loadReviews() {
  try {
    const { data, error } = await supabase
      .from('reviews')
      .select('*')
      .order('created_at', { ascending: false });

    const container = document.createElement('div');
    container.id = 'review-list';
    container.innerHTML = '';

    if (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      container.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç–∑—ã–≤—ã: ' + error.message;
      return;
    }

    if (!data || data.length === 0) {
      container.textContent = '–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤.';
    } else {
      data.forEach(({ name, rating, review, created_at }) => {
        const div = document.createElement('div');
        div.classList.add('single-review');
        div.innerHTML = `
          <strong>${name}</strong> (${new Date(created_at).toLocaleDateString()}):
          <div>–û—Ü–µ–Ω–∫–∞: ${'‚≠ê'.repeat(rating)}</div>
          <div>${review}</div>
          <hr>`;
        container.appendChild(div);
      });
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –≤—Å—Ç–∞–≤–ª–µ–Ω
    if (!document.getElementById('review-list')) {
      document.querySelector('.review-form-container').appendChild(container);
    } else {
      document.getElementById('review-list').replaceWith(container);
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–∑—ã–≤–æ–≤:', err);
  }
}

// üü¢ –°—Ç–∞—Ä—Ç
document.addEventListener('DOMContentLoaded', async () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  const isConnected = await testConnection();
  if (!isConnected) {
    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    return;
  }
  
  generateCaptcha();
  loadReviews();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    try {
        const reviewForm = document.getElementById('reviewForm');
        const captchaQuestion = document.getElementById('captchaQuestion');
        
        if (!reviewForm || !captchaQuestion) {
            console.error('Required form elements not found');
            return;
        }
        
        let currentCaptchaAnswer = generateCaptcha();
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
        reviewForm.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && e.target.tagName !== 'TEXTAREA') {
                e.preventDefault();
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–∞—á-—Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
        const ratingInputs = document.querySelectorAll('.rating-input input[type="radio"]');
        ratingInputs.forEach(input => {
            input.addEventListener('touchstart', function(e) {
                e.preventDefault();
                this.checked = true;
            }, { passive: false });
        });
        
    } catch (error) {
        console.error('Error in reviews.js:', error);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function showMessage(message, type) {
    const messageDiv = document.createElement('div');
    messageDiv.className = `${type}-message`;
    messageDiv.textContent = message;
    
    const formContainer = document.querySelector('.review-form-container');
    if (!formContainer) return;
    
    formContainer.insertBefore(messageDiv, formContainer.firstChild);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    messageDiv.style.opacity = '0';
    messageDiv.style.transform = 'translateY(-10px)';
    
    requestAnimationFrame(() => {
        messageDiv.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
        messageDiv.style.opacity = '1';
        messageDiv.style.transform = 'translateY(0)';
    });
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    setTimeout(() => {
        messageDiv.style.opacity = '0';
        messageDiv.style.transform = 'translateY(-10px)';
        
        setTimeout(() => {
            messageDiv.remove();
        }, 300);
    }, 5000);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∑—ã–≤–∞
function createReviewCard(name, rating, text) {
    const article = document.createElement('article');
    article.className = 'review-card';
    
    const date = new Date().toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
    });
    
    const stars = Array(5).fill().map((_, i) => 
        `<i class="fas fa-star${i < rating ? '' : '-half-alt'}"></i>`
    ).join('');
    
    article.innerHTML = `
        <div class="review-header">
            <div class="review-author">${name}</div>
            <div class="review-date">${date}</div>
        </div>
        <div class="review-rating">${stars}</div>
        <p class="review-text">${text}</p>
    `;
    
    return article;
} 