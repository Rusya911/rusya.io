// üîß –ó–ê–ú–ï–ù–ò –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ Supabase
const SUPABASE_URL = 'https://jfjaescqnacycsrfrbwj.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmamFlc2NxbmFjeWNzcmZyYndqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg1MDkzNjQsImV4cCI6MjA2NDA4NTM2NH0.AhTOw9yjZxACvxMr3XdW2sC-Ek5AbijSkrLy-NKEOwE';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Supabase –∑–∞–≥—Ä—É–∂–µ–Ω
if (typeof window.supabase === 'undefined') {
  console.error('Supabase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ Supabase.');
  showMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
} else {
  const supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_KEY);

  // –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  async function testConnection() {
    try {
      const { data, error } = await supabase
        .from('reviews')
        .select('*')
        .limit(1);
      
      if (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
        showMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ' + error.message, 'error');
        return false;
      }
      
      console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', data);
      return true;
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', err);
      showMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
      return false;
    }
  }

  // üß† –ü—Ä–æ—Å—Ç–∞—è –∫–∞–ø—á–∞: —Å—É–º–º–∞ –¥–≤—É—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
  let expectedCaptchaAnswer = 0;
  function generateCaptcha() {
    try {
      const captchaQuestion = document.getElementById('captchaQuestion');
      if (!captchaQuestion) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç captchaQuestion –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
      }

      const a = Math.floor(Math.random() * 10) + 1;
      const b = Math.floor(Math.random() * 10) + 1;
      expectedCaptchaAnswer = a + b;
      
      captchaQuestion.textContent = `–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç ${a} + ${b}?`;
      console.log('–ö–∞–ø—á–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞:', expectedCaptchaAnswer);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–ø—á–∏:', err);
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞...');

  function initPhoneInput() {
    console.log('–ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞...');
    const phoneInput = document.getElementById('phoneInput');
    
    if (!phoneInput) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('–≠–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞–π–¥–µ–Ω:', phoneInput);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞
    phoneInput.addEventListener('input', function() {
      console.log('–°–æ–±—ã—Ç–∏–µ input:', this.value);
      
      let numbers = this.value.replace(/\D/g, '');

      // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—É—é —Ü–∏—Ñ—Ä—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª 8 –∏–ª–∏ 7 –≤—Ä—É—á–Ω—É—é
      if (numbers.startsWith('8') || numbers.startsWith('7')) {
        numbers = numbers.substring(1);
      }

      // –û–±—Ä–µ–∑–∞–µ–º –¥–æ 10 —Ü–∏—Ñ—Ä
      numbers = numbers.substring(0, 10);

      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
      let formatted = '+7';

      if (numbers.length > 0) {
        formatted += ' (' + numbers.substring(0, 3);
      }
      if (numbers.length >= 4) {
        formatted += ') ' + numbers.substring(3, 6);
      }
      if (numbers.length >= 7) {
        formatted += '-' + numbers.substring(6, 8);
      }
      if (numbers.length >= 9) {
        formatted += '-' + numbers.substring(8, 10);
      }

      this.value = formatted;
    });

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤–≤–æ–¥ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    phoneInput.addEventListener('keypress', function(e) {
      console.log('–°–æ–±—ã—Ç–∏–µ keypress:', e.key);
      if (!/\d/.test(e.key)) {
        e.preventDefault();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏
    phoneInput.addEventListener('paste', function(e) {
      console.log('–°–æ–±—ã—Ç–∏–µ paste');
      e.preventDefault();
      const pastedText = (e.clipboardData || window.clipboardData).getData('text');
      console.log('–í—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:', pastedText);
      this.value = pastedText;
      // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ input –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      this.dispatchEvent(new Event('input'));
    });

    console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–æ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPhoneInput);
  } else {
    initPhoneInput();
  }

  // üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞
  document.getElementById('reviewForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const name = document.getElementById('name').value.trim();
    const rating = document.querySelector('input[name="rating"]:checked')?.value;
    const review = document.getElementById('review').value.trim();
    const phone = document.getElementById('phoneInput').value.replace(/\D/g, ''); // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const captcha = document.getElementById('captcha').value.trim();

    if (!rating) return alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É');
    if (phone.length !== 11) return alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
    if (parseInt(captcha) !== expectedCaptchaAnswer) return alert('–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–ø—á—É');

    const { error } = await supabase
      .from('reviews')
      .insert([{ 
        name, 
        rating: parseInt(rating), 
        review, 
        phone: '+7' + phone.slice(1), // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX
        created_at: new Date().toISOString()
      }]);

    if (error) {
      alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞: ' + error.message);
    } else {
      alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!');
      this.reset();
      generateCaptcha(); // –æ–±–Ω–æ–≤–∏–º –∫–∞–ø—á—É
      loadReviews(); // –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
    }
  });

  // üìã –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  async function loadReviews() {
    try {
      const { data: reviews, error } = await supabase
        .from('reviews')
        .select('id, name, rating, review, created_at')
        .order('created_at', { ascending: false });

      const reviewsGrid = document.querySelector('.reviews-grid');
      if (!reviewsGrid) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç .reviews-grid –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
      }

      // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É –æ—Ç–∑—ã–≤–æ–≤
      reviewsGrid.innerHTML = '';

      if (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        const errorDiv = document.createElement('div');
        errorDiv.className = 'error-message';
        errorDiv.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç–∑—ã–≤—ã: ' + error.message;
        reviewsGrid.appendChild(errorDiv);
        return;
      }

      if (!reviews || reviews.length === 0) {
        const noReviewsDiv = document.createElement('div');
        noReviewsDiv.className = 'no-reviews';
        noReviewsDiv.textContent = '–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤.';
        reviewsGrid.appendChild(noReviewsDiv);
      } else {
        reviews.forEach(({ name, rating, review, created_at }) => {
          const article = document.createElement('article');
          article.className = 'review-card';
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
          const date = new Date(created_at).toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          });

          // –°–æ–∑–¥–∞–µ–º –∑–≤–µ–∑–¥—ã —Ä–µ–π—Ç–∏–Ω–≥–∞
          const stars = Array(5).fill().map((_, i) => 
            `<i class="fas fa-star${i < rating ? '' : '-half-alt'}"></i>`
          ).join('');

          article.innerHTML = `
            <div class="review-header">
              <div class="review-author">${name}</div>
              <div class="review-date">${date}</div>
            </div>
            <div class="review-rating">
              ${stars}
            </div>
            <p class="review-text">${review}</p>
          `;

          // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
          article.style.opacity = '0';
          article.style.transform = 'translateY(20px)';
          reviewsGrid.appendChild(article);

          // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
          requestAnimationFrame(() => {
            article.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
            article.style.opacity = '1';
            article.style.transform = 'translateY(0)';
          });
        });
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–∑—ã–≤–æ–≤:', err);
    }
  }

  // üü¢ –°—Ç–∞—Ä—Ç
  document.addEventListener('DOMContentLoaded', async () => {
    console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
      const isConnected = await testConnection();
      if (!isConnected) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        return;
      }
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∫–∞–ø—á—É
      generateCaptcha();
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–∑—ã–≤—ã
      loadReviews();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
      showMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
    }
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  document.addEventListener('DOMContentLoaded', function() {
      try {
          const reviewForm = document.getElementById('reviewForm');
          const captchaQuestion = document.getElementById('captchaQuestion');
          
          if (!reviewForm || !captchaQuestion) {
              console.error('Required form elements not found');
              return;
          }
          
          let currentCaptchaAnswer = generateCaptcha();
          
          // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
          reviewForm.addEventListener('keypress', function(e) {
              if (e.key === 'Enter' && e.target.tagName !== 'TEXTAREA') {
                  e.preventDefault();
              }
          });
          
          // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–∞—á-—Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
          const ratingInputs = document.querySelectorAll('.rating-input input[type="radio"]');
          ratingInputs.forEach(input => {
              input.addEventListener('touchstart', function(e) {
                  e.preventDefault();
                  this.checked = true;
              }, { passive: false });
          });
          
      } catch (error) {
          console.error('Error in reviews.js:', error);
      }
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
  function showMessage(message, type) {
      const messageDiv = document.createElement('div');
      messageDiv.className = `${type}-message`;
      messageDiv.textContent = message;
      
      const formContainer = document.querySelector('.review-form-container');
      if (!formContainer) return;
      
      formContainer.insertBefore(messageDiv, formContainer.firstChild);
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
      messageDiv.style.opacity = '0';
      messageDiv.style.transform = 'translateY(-10px)';
      
      requestAnimationFrame(() => {
          messageDiv.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
          messageDiv.style.opacity = '1';
          messageDiv.style.transform = 'translateY(0)';
      });
      
      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
      setTimeout(() => {
          messageDiv.style.opacity = '0';
          messageDiv.style.transform = 'translateY(-10px)';
          
          setTimeout(() => {
              messageDiv.remove();
          }, 300);
      }, 5000);
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∑—ã–≤–∞
  function createReviewCard(name, rating, text) {
      const article = document.createElement('article');
      article.className = 'review-card';
      
      const date = new Date().toLocaleDateString('ru-RU', {
          year: 'numeric',
          month: '2-digit',
          day: '2-digit'
      });
      
      const stars = Array(5).fill().map((_, i) => 
          `<i class="fas fa-star${i < rating ? '' : '-half-alt'}"></i>`
      ).join('');
      
      article.innerHTML = `
          <div class="review-header">
              <div class="review-author">${name}</div>
              <div class="review-date">${date}</div>
          </div>
          <div class="review-rating">${stars}</div>
          <p class="review-text">${text}</p>
      `;
      
      return article;
  }
} 